name: CI

on:
  pull_request:
#    paths-ignore:
#      - 'README.md'
#      - '.all-contributorsrc'
#      - 'docs/*'

jobs:
  prep-testbed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: |
          echo "PIP_TAG='[devel]'" >> $GITHUB_ENV
      - name: Upload to Github Docker Registry
        uses: elgohr/Publish-Docker-Github-Action@3.02
        with:
          name: jina-ai/jina/jina
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: docker.pkg.github.com
          dockerfile: Dockerfiles/pip.Dockerfile
          buildargs: PIP_TAG
          buildoptions: ${{ matrix.build_option }}
          tags: "test-pip"
      - id: set-matrix
        run: |
          sudo apt-get install jq
          echo "::set-output name=matrix::$(bash scripts/get-test-paths.sh tests/jinad)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  daemon-test:
    runs-on: ubuntu-latest
    needs: prep-testbed
    strategy:
      matrix:
        python-version: [3.7]
        test-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[cicd,daemon,test]" --no-cache-dir
      - name: Run tests
        run: |
          export JINA_LOG_VERBOSITY="ERROR"
          pytest --force-flaky --min-passes 1 --max-runs 5 --cov=jina --cov-report=xml -n 1 --timeout=120 -v ${{ matrix.test-path }}
        timeout-minutes: 40
        env:
          JINAHUB_USERNAME: ${{ secrets.JINAHUB_USERNAME }}
          JINAHUB_PASSWORD: ${{ secrets.JINAHUB_PASSWORD }}
      - name: Upload coverage from test to Codecov
        uses: codecov/codecov-action@v1
        if: ${{ matrix.python-version }} == 3.7
        with:
          file: coverage.xml
          name: jinad-${{ matrix.python-version }}-${{ matrix.test-path }}-codecov
          flags: ${{ matrix.test-path }}, jinad, ci
          fail_ci_if_error: false
